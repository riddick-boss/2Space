plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.gladed.androidgitversion' version '0.4.14'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.vanniktech.android.junit.jacoco'
}

kapt {
    correctErrorTypes = true
}

androidGitVersion {
    codeFormat = 'MNNPPP'
}

def name = "2Space"
def androidGitVersionCode = androidGitVersion.code()
def androidGitVersionName = androidGitVersion.name()

android {
    compileSdk 33

    defaultConfig {
        applicationId "abandonedstudio.app.tospace"
        minSdk 21
        targetSdk 33
        versionCode androidGitVersionCode
        versionName androidGitVersionName
        manifestPlaceholders = [
                APP_NAME: "$name",
                APP_NAME_SUFFIX: "",
        ]
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        def localPropertiesFile = rootProject.file("local.properties")
        def localProperties = new Properties()
        if (localPropertiesFile.exists()) {
            localProperties.load(new FileInputStream(localPropertiesFile))
        }

        buildConfigField("String", "OPEN_WEATHER_MAP_API_KEY", localProperties.getProperty('OPEN_WEATHER_MAP_API_KEY', '"noKey"'))
        buildConfigField("String", "NEWS_DATA_IO_API_KEY", localProperties.getProperty('NEWS_DATA_IO_API_KEY', '"noKey"'))
        buildConfigField("String", "EMAIL", localProperties.getProperty('EMAIL', '""'))
        buildConfigField("String", "ALL_LAUNCHES_TOPIC_VALUE", localProperties.getProperty('ALL_LAUNCHES_TOPIC_VALUE', '"all_launches"'))
        buildConfigField("String", "APP_UPDATE_TOPIC_VALUE", localProperties.getProperty('APP_UPDATE_TOPIC_VALUE', '"app_update"'))
        buildConfigField("String", "DEBUG_TOPIC_VALUE", localProperties.getProperty('DEBUG_TOPIC_VALUE', '"debug_topic"'))
        buildConfigField("String", "DATASTORE_PREFERENCES_NAME", localProperties.getProperty('DATASTORE_PREFERENCES_NAME', '"DATASTORE_PREFERENCES_NAME"'))
    }

    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file("releasekeystore.properties")
            if (!keystorePropertiesFile.exists()) {
                return
            }
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders.APP_NAME_SUFFIX = " Debug"
//            applicationIdSuffix '.debug'
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'abandonedstudio.app.tospace'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'

//    Compose
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'com.google.android.material:compose-theme-adapter:1.1.20'

//    Accompanist
//    Pager
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
//    Swipe refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"

//    Number picker
    implementation "com.chargemap.compose:numberpicker:1.0.3"

//    AndroidX paging
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'
    implementation 'androidx.paging:paging-compose:1.0.0-alpha17'

//    Coil
    implementation "io.coil-kt:coil-compose:2.1.0"

//    Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

//    Navigation
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

//    Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

//    Ktor
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"

//    Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

//    Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

//    Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

//    LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

//   Local Unit Tests
    implementation "androidx.test:core:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.robolectric:robolectric:4.8.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.6'
    testImplementation 'io.mockk:mockk:1.12.4'
    testImplementation 'app.cash.turbine:turbine:0.8.0'
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

//    Instrumented Unit Tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.6'
    androidTestImplementation 'io.mockk:mockk-android:1.12.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
}